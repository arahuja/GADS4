salary <- read.csv('~/Dropbox/src/GADS4/data/lahman/Salaries.csv')
batting <- read.csv('~/Dropbox/src/GADS4/data/lahman/Batting.csv')
master <- read.csv('~/Dropbox/src/GADS4/data/lahman/Master.csv')
head(master)
batting_salary <- merge(batting, salary)
data <- merge(master, batting_salary)
nrow(data)
model.data <- data[, c("HR", "RBI", 'R', "G", "SB", "salary", 'height', 'weight')]
head(model.data)
model.data <- data[, c("HR", "RBI", 'R', "G", "SB", "salary", 'height', 'weight', 'yearID')]
head(model.data)
model.data <- model.data[complete.cases(model.data),]
head(model.data)
head(complete.cases(model.data))
model <- lm(salary ~ HR + RBI  )
model <- lm(salary ~ HR + RBI ,data =model.data )
summary(model)
training <- model.data[model.data$yearID ==2011 ,]
head(model.data$yearID ==2011)
head(training)
test <- model.data[model.data$yearID ==2012 ,]
nrow(training)
nrow(test)
mse <- function(x , y)
{
mean( (x-y)^2 )
}
mae <- function(x,y)
{
mean ( abs(x-y) )
}
model <- lm( salary ~ HR + RBI, data=training)
summary(model)
test.predict <- predict(model, test)
head(test.predict)
plot(test.predict, test$salary)
mae(test.predict, test$salary)
hist(test$salary)
model <- lm( salary ~ HR + RBI + R + G , data=training)
test.predict <- predict(model, test)
mae(test.predict, test$salary)
hist(log(test$salary))
model <- lm( log(salary) ~ HR + RBI + R + G , data=training)
summary(model)
log(10)
log(exp(10))
log(exp(1))
test.predict <- predict(model, test)
head(test.predict)
mae(exp(test.predict), test$salary)
model.data$Games50 <- (model.data$G > 50)
head(model.data)
plot(model.data$G, model.data$salary)
?glmnet
install.packages('glmnet')
library('glmnet')
?glmnet
rm <- glmnet(  )
rm <- c(0,1)
rm
rm()
rm(rm)
model.reg <- glmnet( as.matrix(training[,c('HR', 'RBI')]), as.matrix(training$salary ))
test.reg <- predict(model.reg, as.matrix(test[,c('HR', 'RBI')]))
head(test.reg)
model.reg <- cv.glmnet( as.matrix(training[,c('HR', 'RBI')]), as.matrix(training$salary ))
test.reg <- predict(model.reg, as.matrix(test[,c('HR', 'RBI')]), s=0.01)
head(test.reg)
test.reg <- predict(model.reg, as.matrix(test[,c('HR', 'RBI')]), s=model.reg$lambda.min)
head(test.reg)
test.reg <- predict(model.reg, as.matrix(test[,c('HR', 'RBI')]), s=0.01)
?glmnet
summary(model.reg)
